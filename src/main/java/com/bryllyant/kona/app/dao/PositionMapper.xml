<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bryllyant.kona.app.dao.PositionMapper">
  <resultMap id="BaseResultMap" type="com.bryllyant.kona.app.entity.Position">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="app_id" jdbcType="BIGINT" property="appId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="place_id" jdbcType="BIGINT" property="placeId" />
    <result column="dwell_time" jdbcType="BIGINT" property="dwellTime" />
    <result column="sample_no" jdbcType="BIGINT" property="sampleNo" />
    <result column="network" jdbcType="VARCHAR" property="network" />
    <result column="battery" jdbcType="INTEGER" property="battery" />
    <result column="background" jdbcType="BIT" property="background" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="indoor_floor" jdbcType="INTEGER" property="indoorFloor" />
    <result column="horizontal_accuracy" jdbcType="DOUBLE" property="horizontalAccuracy" />
    <result column="altitude" jdbcType="DOUBLE" property="altitude" />
    <result column="altitude_accuracy" jdbcType="DOUBLE" property="altitudeAccuracy" />
    <result column="heading" jdbcType="DOUBLE" property="heading" />
    <result column="speed" jdbcType="DOUBLE" property="speed" />
    <result column="position_date" jdbcType="TIMESTAMP" property="positionDate" />
    <result column="captured_date" jdbcType="TIMESTAMP" property="capturedDate" />
    <result column="ipv4" jdbcType="VARCHAR" property="ipv4" />
    <result column="ipv6" jdbcType="VARCHAR" property="ipv6" />
    <result column="user_agent" jdbcType="VARCHAR" property="userAgent" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="error_code" jdbcType="VARCHAR" property="errorCode" />
    <result column="error_message" jdbcType="VARCHAR" property="errorMessage" />
    <result column="error_date" jdbcType="TIMESTAMP" property="errorDate" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bryllyant.kona.app.entity.Position">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    <result column="indoor_detail" jdbcType="LONGVARCHAR" property="indoorDetail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    `id`, `uid`, `app_id`, `user_id`, `device_id`, `place_id`, `dwell_time`, `sample_no`, 
    `network`, `battery`, `background`, `source`, `latitude`, `longitude`, `indoor_floor`, 
    `horizontal_accuracy`, `altitude`, `altitude_accuracy`, `heading`, `speed`, `position_date`, 
    `captured_date`, `ipv4`, `ipv6`, `user_agent`, `country`, `error_code`, `error_message`, 
    `error_date`, `created_date`, `updated_date`
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    `indoor_detail`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bryllyant.kona.app.entity.PositionExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `kona__position`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
    <if test="offset != null">
      offset ${offset}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bryllyant.kona.app.entity.PositionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `kona__position`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
    <if test="offset != null">
      offset ${offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `kona__position`
    where `id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    delete from `kona__position`
    where `id` = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bryllyant.kona.app.entity.PositionExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    delete from `kona__position`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bryllyant.kona.app.entity.Position">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `kona__position` (`uid`, `app_id`, `user_id`, 
      `device_id`, `place_id`, `dwell_time`, 
      `sample_no`, `network`, `battery`, 
      `background`, `source`, `latitude`, 
      `longitude`, `indoor_floor`, `horizontal_accuracy`, 
      `altitude`, `altitude_accuracy`, `heading`, 
      `speed`, `position_date`, `captured_date`, 
      `ipv4`, `ipv6`, `user_agent`, 
      `country`, `error_code`, `error_message`, 
      `error_date`, `created_date`, `updated_date`, 
      `indoor_detail`)
    values (#{uid,jdbcType=VARCHAR}, #{appId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{deviceId,jdbcType=BIGINT}, #{placeId,jdbcType=BIGINT}, #{dwellTime,jdbcType=BIGINT}, 
      #{sampleNo,jdbcType=BIGINT}, #{network,jdbcType=VARCHAR}, #{battery,jdbcType=INTEGER}, 
      #{background,jdbcType=BIT}, #{source,jdbcType=VARCHAR}, #{latitude,jdbcType=DOUBLE}, 
      #{longitude,jdbcType=DOUBLE}, #{indoorFloor,jdbcType=INTEGER}, #{horizontalAccuracy,jdbcType=DOUBLE}, 
      #{altitude,jdbcType=DOUBLE}, #{altitudeAccuracy,jdbcType=DOUBLE}, #{heading,jdbcType=DOUBLE}, 
      #{speed,jdbcType=DOUBLE}, #{positionDate,jdbcType=TIMESTAMP}, #{capturedDate,jdbcType=TIMESTAMP}, 
      #{ipv4,jdbcType=VARCHAR}, #{ipv6,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{errorCode,jdbcType=VARCHAR}, #{errorMessage,jdbcType=VARCHAR}, 
      #{errorDate,jdbcType=TIMESTAMP}, #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP}, 
      #{indoorDetail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bryllyant.kona.app.entity.Position">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `kona__position`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="appId != null">
        `app_id`,
      </if>
      <if test="userId != null">
        `user_id`,
      </if>
      <if test="deviceId != null">
        `device_id`,
      </if>
      <if test="placeId != null">
        `place_id`,
      </if>
      <if test="dwellTime != null">
        `dwell_time`,
      </if>
      <if test="sampleNo != null">
        `sample_no`,
      </if>
      <if test="network != null">
        `network`,
      </if>
      <if test="battery != null">
        `battery`,
      </if>
      `background`,
      <if test="source != null">
        `source`,
      </if>
      <if test="latitude != null">
        `latitude`,
      </if>
      <if test="longitude != null">
        `longitude`,
      </if>
      <if test="indoorFloor != null">
        `indoor_floor`,
      </if>
      <if test="horizontalAccuracy != null">
        `horizontal_accuracy`,
      </if>
      <if test="altitude != null">
        `altitude`,
      </if>
      <if test="altitudeAccuracy != null">
        `altitude_accuracy`,
      </if>
      <if test="heading != null">
        `heading`,
      </if>
      <if test="speed != null">
        `speed`,
      </if>
      <if test="positionDate != null">
        `position_date`,
      </if>
      <if test="capturedDate != null">
        `captured_date`,
      </if>
      <if test="ipv4 != null">
        `ipv4`,
      </if>
      <if test="ipv6 != null">
        `ipv6`,
      </if>
      <if test="userAgent != null">
        `user_agent`,
      </if>
      <if test="country != null">
        `country`,
      </if>
      <if test="errorCode != null">
        `error_code`,
      </if>
      <if test="errorMessage != null">
        `error_message`,
      </if>
      <if test="errorDate != null">
        `error_date`,
      </if>
      <if test="createdDate != null">
        `created_date`,
      </if>
      <if test="updatedDate != null">
        `updated_date`,
      </if>
      <if test="indoorDetail != null">
        `indoor_detail`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="placeId != null">
        #{placeId,jdbcType=BIGINT},
      </if>
      <if test="dwellTime != null">
        #{dwellTime,jdbcType=BIGINT},
      </if>
      <if test="sampleNo != null">
        #{sampleNo,jdbcType=BIGINT},
      </if>
      <if test="network != null">
        #{network,jdbcType=VARCHAR},
      </if>
      <if test="battery != null">
        #{battery,jdbcType=INTEGER},
      </if>
      #{background,jdbcType=BIT},
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="indoorFloor != null">
        #{indoorFloor,jdbcType=INTEGER},
      </if>
      <if test="horizontalAccuracy != null">
        #{horizontalAccuracy,jdbcType=DOUBLE},
      </if>
      <if test="altitude != null">
        #{altitude,jdbcType=DOUBLE},
      </if>
      <if test="altitudeAccuracy != null">
        #{altitudeAccuracy,jdbcType=DOUBLE},
      </if>
      <if test="heading != null">
        #{heading,jdbcType=DOUBLE},
      </if>
      <if test="speed != null">
        #{speed,jdbcType=DOUBLE},
      </if>
      <if test="positionDate != null">
        #{positionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="capturedDate != null">
        #{capturedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ipv4 != null">
        #{ipv4,jdbcType=VARCHAR},
      </if>
      <if test="ipv6 != null">
        #{ipv6,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null">
        #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMessage != null">
        #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="errorDate != null">
        #{errorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="indoorDetail != null">
        #{indoorDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bryllyant.kona.app.entity.PositionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    select count(*) from `kona__position`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    update `kona__position`
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        `app_id` = #{record.appId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        `user_id` = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.deviceId != null">
        `device_id` = #{record.deviceId,jdbcType=BIGINT},
      </if>
      <if test="record.placeId != null">
        `place_id` = #{record.placeId,jdbcType=BIGINT},
      </if>
      <if test="record.dwellTime != null">
        `dwell_time` = #{record.dwellTime,jdbcType=BIGINT},
      </if>
      <if test="record.sampleNo != null">
        `sample_no` = #{record.sampleNo,jdbcType=BIGINT},
      </if>
      <if test="record.network != null">
        `network` = #{record.network,jdbcType=VARCHAR},
      </if>
      <if test="record.battery != null">
        `battery` = #{record.battery,jdbcType=INTEGER},
      </if>
      <if test="record.background != null">
        `background` = #{record.background,jdbcType=BIT},
      </if>
      <if test="record.source != null">
        `source` = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        `latitude` = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude != null">
        `longitude` = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.indoorFloor != null">
        `indoor_floor` = #{record.indoorFloor,jdbcType=INTEGER},
      </if>
      <if test="record.horizontalAccuracy != null">
        `horizontal_accuracy` = #{record.horizontalAccuracy,jdbcType=DOUBLE},
      </if>
      <if test="record.altitude != null">
        `altitude` = #{record.altitude,jdbcType=DOUBLE},
      </if>
      <if test="record.altitudeAccuracy != null">
        `altitude_accuracy` = #{record.altitudeAccuracy,jdbcType=DOUBLE},
      </if>
      <if test="record.heading != null">
        `heading` = #{record.heading,jdbcType=DOUBLE},
      </if>
      <if test="record.speed != null">
        `speed` = #{record.speed,jdbcType=DOUBLE},
      </if>
      <if test="record.positionDate != null">
        `position_date` = #{record.positionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.capturedDate != null">
        `captured_date` = #{record.capturedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ipv4 != null">
        `ipv4` = #{record.ipv4,jdbcType=VARCHAR},
      </if>
      <if test="record.ipv6 != null">
        `ipv6` = #{record.ipv6,jdbcType=VARCHAR},
      </if>
      <if test="record.userAgent != null">
        `user_agent` = #{record.userAgent,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        `country` = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.errorCode != null">
        `error_code` = #{record.errorCode,jdbcType=VARCHAR},
      </if>
      <if test="record.errorMessage != null">
        `error_message` = #{record.errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.errorDate != null">
        `error_date` = #{record.errorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdDate != null">
        `created_date` = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDate != null">
        `updated_date` = #{record.updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.indoorDetail != null">
        `indoor_detail` = #{record.indoorDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    update `kona__position`
    set `id` = #{record.id,jdbcType=BIGINT},
      `uid` = #{record.uid,jdbcType=VARCHAR},
      `app_id` = #{record.appId,jdbcType=BIGINT},
      `user_id` = #{record.userId,jdbcType=BIGINT},
      `device_id` = #{record.deviceId,jdbcType=BIGINT},
      `place_id` = #{record.placeId,jdbcType=BIGINT},
      `dwell_time` = #{record.dwellTime,jdbcType=BIGINT},
      `sample_no` = #{record.sampleNo,jdbcType=BIGINT},
      `network` = #{record.network,jdbcType=VARCHAR},
      `battery` = #{record.battery,jdbcType=INTEGER},
      `background` = #{record.background,jdbcType=BIT},
      `source` = #{record.source,jdbcType=VARCHAR},
      `latitude` = #{record.latitude,jdbcType=DOUBLE},
      `longitude` = #{record.longitude,jdbcType=DOUBLE},
      `indoor_floor` = #{record.indoorFloor,jdbcType=INTEGER},
      `horizontal_accuracy` = #{record.horizontalAccuracy,jdbcType=DOUBLE},
      `altitude` = #{record.altitude,jdbcType=DOUBLE},
      `altitude_accuracy` = #{record.altitudeAccuracy,jdbcType=DOUBLE},
      `heading` = #{record.heading,jdbcType=DOUBLE},
      `speed` = #{record.speed,jdbcType=DOUBLE},
      `position_date` = #{record.positionDate,jdbcType=TIMESTAMP},
      `captured_date` = #{record.capturedDate,jdbcType=TIMESTAMP},
      `ipv4` = #{record.ipv4,jdbcType=VARCHAR},
      `ipv6` = #{record.ipv6,jdbcType=VARCHAR},
      `user_agent` = #{record.userAgent,jdbcType=VARCHAR},
      `country` = #{record.country,jdbcType=VARCHAR},
      `error_code` = #{record.errorCode,jdbcType=VARCHAR},
      `error_message` = #{record.errorMessage,jdbcType=VARCHAR},
      `error_date` = #{record.errorDate,jdbcType=TIMESTAMP},
      `created_date` = #{record.createdDate,jdbcType=TIMESTAMP},
      `updated_date` = #{record.updatedDate,jdbcType=TIMESTAMP},
      `indoor_detail` = #{record.indoorDetail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    update `kona__position`
    set `id` = #{record.id,jdbcType=BIGINT},
      `uid` = #{record.uid,jdbcType=VARCHAR},
      `app_id` = #{record.appId,jdbcType=BIGINT},
      `user_id` = #{record.userId,jdbcType=BIGINT},
      `device_id` = #{record.deviceId,jdbcType=BIGINT},
      `place_id` = #{record.placeId,jdbcType=BIGINT},
      `dwell_time` = #{record.dwellTime,jdbcType=BIGINT},
      `sample_no` = #{record.sampleNo,jdbcType=BIGINT},
      `network` = #{record.network,jdbcType=VARCHAR},
      `battery` = #{record.battery,jdbcType=INTEGER},
      `background` = #{record.background,jdbcType=BIT},
      `source` = #{record.source,jdbcType=VARCHAR},
      `latitude` = #{record.latitude,jdbcType=DOUBLE},
      `longitude` = #{record.longitude,jdbcType=DOUBLE},
      `indoor_floor` = #{record.indoorFloor,jdbcType=INTEGER},
      `horizontal_accuracy` = #{record.horizontalAccuracy,jdbcType=DOUBLE},
      `altitude` = #{record.altitude,jdbcType=DOUBLE},
      `altitude_accuracy` = #{record.altitudeAccuracy,jdbcType=DOUBLE},
      `heading` = #{record.heading,jdbcType=DOUBLE},
      `speed` = #{record.speed,jdbcType=DOUBLE},
      `position_date` = #{record.positionDate,jdbcType=TIMESTAMP},
      `captured_date` = #{record.capturedDate,jdbcType=TIMESTAMP},
      `ipv4` = #{record.ipv4,jdbcType=VARCHAR},
      `ipv6` = #{record.ipv6,jdbcType=VARCHAR},
      `user_agent` = #{record.userAgent,jdbcType=VARCHAR},
      `country` = #{record.country,jdbcType=VARCHAR},
      `error_code` = #{record.errorCode,jdbcType=VARCHAR},
      `error_message` = #{record.errorMessage,jdbcType=VARCHAR},
      `error_date` = #{record.errorDate,jdbcType=TIMESTAMP},
      `created_date` = #{record.createdDate,jdbcType=TIMESTAMP},
      `updated_date` = #{record.updatedDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bryllyant.kona.app.entity.Position">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    update `kona__position`
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        `app_id` = #{appId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        `user_id` = #{userId,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null">
        `device_id` = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="placeId != null">
        `place_id` = #{placeId,jdbcType=BIGINT},
      </if>
      <if test="dwellTime != null">
        `dwell_time` = #{dwellTime,jdbcType=BIGINT},
      </if>
      <if test="sampleNo != null">
        `sample_no` = #{sampleNo,jdbcType=BIGINT},
      </if>
      <if test="network != null">
        `network` = #{network,jdbcType=VARCHAR},
      </if>
      <if test="battery != null">
        `battery` = #{battery,jdbcType=INTEGER},
      </if>
      <if test="background != null">
        `background` = #{background,jdbcType=BIT},
      </if>
      <if test="source != null">
        `source` = #{source,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        `latitude` = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        `longitude` = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="indoorFloor != null">
        `indoor_floor` = #{indoorFloor,jdbcType=INTEGER},
      </if>
      <if test="horizontalAccuracy != null">
        `horizontal_accuracy` = #{horizontalAccuracy,jdbcType=DOUBLE},
      </if>
      <if test="altitude != null">
        `altitude` = #{altitude,jdbcType=DOUBLE},
      </if>
      <if test="altitudeAccuracy != null">
        `altitude_accuracy` = #{altitudeAccuracy,jdbcType=DOUBLE},
      </if>
      <if test="heading != null">
        `heading` = #{heading,jdbcType=DOUBLE},
      </if>
      <if test="speed != null">
        `speed` = #{speed,jdbcType=DOUBLE},
      </if>
      <if test="positionDate != null">
        `position_date` = #{positionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="capturedDate != null">
        `captured_date` = #{capturedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ipv4 != null">
        `ipv4` = #{ipv4,jdbcType=VARCHAR},
      </if>
      <if test="ipv6 != null">
        `ipv6` = #{ipv6,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null">
        `user_agent` = #{userAgent,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        `country` = #{country,jdbcType=VARCHAR},
      </if>
      <if test="errorCode != null">
        `error_code` = #{errorCode,jdbcType=VARCHAR},
      </if>
      <if test="errorMessage != null">
        `error_message` = #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="errorDate != null">
        `error_date` = #{errorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdDate != null">
        `created_date` = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        `updated_date` = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="indoorDetail != null">
        `indoor_detail` = #{indoorDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bryllyant.kona.app.entity.Position">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    update `kona__position`
    set `uid` = #{uid,jdbcType=VARCHAR},
      `app_id` = #{appId,jdbcType=BIGINT},
      `user_id` = #{userId,jdbcType=BIGINT},
      `device_id` = #{deviceId,jdbcType=BIGINT},
      `place_id` = #{placeId,jdbcType=BIGINT},
      `dwell_time` = #{dwellTime,jdbcType=BIGINT},
      `sample_no` = #{sampleNo,jdbcType=BIGINT},
      `network` = #{network,jdbcType=VARCHAR},
      `battery` = #{battery,jdbcType=INTEGER},
      `background` = #{background,jdbcType=BIT},
      `source` = #{source,jdbcType=VARCHAR},
      `latitude` = #{latitude,jdbcType=DOUBLE},
      `longitude` = #{longitude,jdbcType=DOUBLE},
      `indoor_floor` = #{indoorFloor,jdbcType=INTEGER},
      `horizontal_accuracy` = #{horizontalAccuracy,jdbcType=DOUBLE},
      `altitude` = #{altitude,jdbcType=DOUBLE},
      `altitude_accuracy` = #{altitudeAccuracy,jdbcType=DOUBLE},
      `heading` = #{heading,jdbcType=DOUBLE},
      `speed` = #{speed,jdbcType=DOUBLE},
      `position_date` = #{positionDate,jdbcType=TIMESTAMP},
      `captured_date` = #{capturedDate,jdbcType=TIMESTAMP},
      `ipv4` = #{ipv4,jdbcType=VARCHAR},
      `ipv6` = #{ipv6,jdbcType=VARCHAR},
      `user_agent` = #{userAgent,jdbcType=VARCHAR},
      `country` = #{country,jdbcType=VARCHAR},
      `error_code` = #{errorCode,jdbcType=VARCHAR},
      `error_message` = #{errorMessage,jdbcType=VARCHAR},
      `error_date` = #{errorDate,jdbcType=TIMESTAMP},
      `created_date` = #{createdDate,jdbcType=TIMESTAMP},
      `updated_date` = #{updatedDate,jdbcType=TIMESTAMP},
      `indoor_detail` = #{indoorDetail,jdbcType=LONGVARCHAR}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bryllyant.kona.app.entity.Position">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 17 16:06:32 EDT 2017.
    -->
    update `kona__position`
    set `uid` = #{uid,jdbcType=VARCHAR},
      `app_id` = #{appId,jdbcType=BIGINT},
      `user_id` = #{userId,jdbcType=BIGINT},
      `device_id` = #{deviceId,jdbcType=BIGINT},
      `place_id` = #{placeId,jdbcType=BIGINT},
      `dwell_time` = #{dwellTime,jdbcType=BIGINT},
      `sample_no` = #{sampleNo,jdbcType=BIGINT},
      `network` = #{network,jdbcType=VARCHAR},
      `battery` = #{battery,jdbcType=INTEGER},
      `background` = #{background,jdbcType=BIT},
      `source` = #{source,jdbcType=VARCHAR},
      `latitude` = #{latitude,jdbcType=DOUBLE},
      `longitude` = #{longitude,jdbcType=DOUBLE},
      `indoor_floor` = #{indoorFloor,jdbcType=INTEGER},
      `horizontal_accuracy` = #{horizontalAccuracy,jdbcType=DOUBLE},
      `altitude` = #{altitude,jdbcType=DOUBLE},
      `altitude_accuracy` = #{altitudeAccuracy,jdbcType=DOUBLE},
      `heading` = #{heading,jdbcType=DOUBLE},
      `speed` = #{speed,jdbcType=DOUBLE},
      `position_date` = #{positionDate,jdbcType=TIMESTAMP},
      `captured_date` = #{capturedDate,jdbcType=TIMESTAMP},
      `ipv4` = #{ipv4,jdbcType=VARCHAR},
      `ipv6` = #{ipv6,jdbcType=VARCHAR},
      `user_agent` = #{userAgent,jdbcType=VARCHAR},
      `country` = #{country,jdbcType=VARCHAR},
      `error_code` = #{errorCode,jdbcType=VARCHAR},
      `error_message` = #{errorMessage,jdbcType=VARCHAR},
      `error_date` = #{errorDate,jdbcType=TIMESTAMP},
      `created_date` = #{createdDate,jdbcType=TIMESTAMP},
      `updated_date` = #{updatedDate,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=BIGINT}
  </update>
  
  
  
  
  
  
   
    <update id="updateCoords" parameterType="java.lang.Long">
        update kona__position
        set coords = PointFromText(concat('POINT(',
        ifnull(longitude, 0),
        ' ',
        ifnull(latitude, 0),
        ')'))
        where id = #{objectId,jdbcType=BIGINT}
    </update>

    <select id="selectProximate" parameterType="map" resultMap="BaseResultMap">
        <!-- measured at 39 degrees lat (center of US) -->
        set @METERS_PER_LAT_DEGREE = 111015.45;
        set @METERS_PER_LNG_DEGREE = 86626.37;

        <!-- radius in meters -->
        set @EARTH_RADIUS = 6372797.560856;

        set @lat = #{latitude,jdbcType=DOUBLE};
        set @lon = #{longitude,jdbcType=DOUBLE};
        set @dist = #{radius,jdbcType=DOUBLE};

        set @rlat1 = @lat - (@dist / @METERS_PER_LAT_DEGREE);
        set @rlon1 = @lon - (@dist/abs(cos(radians(@lat)) *
        @METERS_PER_LAT_DEGREE));

        set @rlat2 = @lat + (@dist / @METERS_PER_LAT_DEGREE);
        set @rlon2 = @lon + (@dist / abs(cos(radians(@lat)) *
        @METERS_PER_LAT_DEGREE));


        <!-- Great circle distance calculation This function returns distance in 
            KM CREATE FUNCTION slc (lat1 double, lon1 double, lat2 double, lon2 double) 
            RETURNS double RETURN 6371 * acos(cos(radians(lat1)) * cos(radians(lat2)) 
            * cos(radians(lon2) - radians(lon1)) + sin(radians(lat1)) * sin(radians(lat2))); -->


        select
        <include refid="Base_Column_List" />
        , (@EARTH_RADIUS *
        acos(cos(radians(@lat)) *
        cos(radians(y(coords))) *
        cos(radians(x(coords)) - radians(@lon)) +
        sin(radians(@lat)) *
        sin(radians(y(coords))))) as distance

        from kona__position

        <!-- filter out bogus records -->
        where latitude is not null
        and longitude is not null
        and coords is not null

        <if test="startDate != null">
            and position_date &gt; #{startDate,jdbcType=TIMESTAMP}
        </if>

        <if test="endDate != null">
            and position_date &lt; #{endDate,jdbcType=TIMESTAMP}
        </if>

        <!-- match within radius -->
        and st_within(coords,
        envelope(
        linestring(point(@rlon1, @rlat1), point(@rlon2, @rlat2))
        )
        )

        order by st_distance(point(@lon, @lat), coords)
    </select>
</mapper>